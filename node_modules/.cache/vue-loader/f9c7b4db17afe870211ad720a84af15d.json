{"remainingRequest":"/home/runner/work/U2_Introduccion_administracion/U2_Introduccion_administracion/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U2_Introduccion_administracion/U2_Introduccion_administracion/src/views/curso/Tema2.vue?vue&type=template&id=3da027e8&lang=pug&","dependencies":[{"path":"/home/runner/work/U2_Introduccion_administracion/U2_Introduccion_administracion/src/views/curso/Tema2.vue","mtime":1756098451982},{"path":"/home/runner/work/U2_Introduccion_administracion/U2_Introduccion_administracion/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Introduccion_administracion/U2_Introduccion_administracion/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U2_Introduccion_administracion/U2_Introduccion_administracion/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U2_Introduccion_administracion/U2_Introduccion_administracion/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Introduccion_administracion/U2_Introduccion_administracion/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jdXJzby1tYWluLWNvbnRhaW5lci5wYi0zCiAgQmFubmVySW50ZXJubyg6c3ViVGl0dWxvPSInMi4gT3JnYW5pemFjacOzbjogZXN0cnVjdHVyYSBvcmdhbml6YWNpb25hbCB5IGFzaWduYWNpw7NuIGRlIHJlY3Vyc29zJyIpCiAgLmNvbnRhaW5lci50YXJqZXRhLnRhcmpldGEtLWJsYW5jYS5weC00LnB0LTQucHgtbWQtNS5wdC1tZC01LnBiLTAub3ZlcmZsb3ctaGlkZGVuCiAgICAuYmctZnVsbC13aWR0aC5iZy1mb25kby02Lm1iLTUoZGF0YS1hb3M9ImZhZGUtdXAiKQogICAgICAucHgtNS5weS0wCiAgICAgICAgLnJvdy5qdXN0aWZ5LWNvbnRlbnQtY2VudGVyLm1iLTAuYWxpZ24taXRlbXMtY2VudGVyCiAgICAgICAgICAuY29sLXNtLTEyLmNvbC1sZy02LmQtbm9uZS5kLWxnLWJsb2NrCiAgICAgICAgICAgIGltZyhzcmM9J0AvYXNzZXRzL2N1cnNvL3QyLzEuc3ZnJywgYWx0PScnKQogICAgICAgICAgLmNvbC1zbS0xMi5jb2wtbGctNgogICAgICAgICAgICBwLm1iLTQgTGEgI1tiIGVzdHJ1Y3R1cmEgb3JnYW5pemFjaW9uYWxdIHkgbGEgYXNpZ25hY2nDs24gZGUgcmVjdXJzb3MsIHNvbiBmdW5kYW1lbnRhbGVzIHBhcmEgZWwgZnVuY2lvbmFtaWVudG8gZWZpY2llbnRlIGRlIGN1YWxxdWllciBlbXByZXNhLiBVbmEgYWRlY3VhZGEgb3JnYW5pemFjacOzbiBlc3RydWN0dXJhbCwgZmFjaWxpdGEgbGEgY29vcmRpbmFjacOzbiBkZSBhY3RpdmlkYWRlcyB5IG9wdGltaXphIGVsIHVzbyBkZSBsb3MgcmVjdXJzb3MgZGlzcG9uaWJsZXMsIGxvIHF1ZSBwZXJtaXRlIGFsY2FuemFyIGxvcyBvYmpldGl2b3MgZXN0cmF0w6lnaWNvcy4KICAgICAgICAgICAgLnAtNC5iZy1jb2xvci0xMi5tYi0wCiAgICAgICAgICAgICAgcC5tYi0wIExhICNbYiBhc2lnbmFjacOzbiBlZmljYXpdIGRlIHJlY3Vyc29zLCB0YW50byBodW1hbm9zIGNvbW8gbWF0ZXJpYWxlcywgYXNlZ3VyYSBxdWUgY2FkYSDDoXJlYSBmdW5jaW9uZSBkZSBmb3JtYSBhbGluZWFkYSBjb24gbGFzIG1ldGFzIG9yZ2FuaXphY2lvbmFsZXMsIHByb21vdmllbmRvIHVuYSBnZXN0acOzbiBlZmljaWVudGUgeSB1bmEgbWF5b3IgY29tcGV0aXRpdmlkYWQgZW4gZWwgbWVyY2Fkby4KICAgICN0XzJfMS50aXR1bG8tc2VndW5kbyhkYXRhLWFvcz0iZmFkZS11cCIpCiAgICAgIGgyICNbc3BhbiAyLjFdIERlZmluaWNpw7NuIGRlIGxhIG9yZ2FuaXphY2nDs24KICAgIC5yb3cuanVzdGlmeS1jb250ZW50LWNlbnRlci5tYi01KGRhdGEtYW9zPSJmYWRlLXVwIikKICAgICAgLmNvbC1zbS0xMi5jb2wtbGctOC5iZy1jb2xvci0zCiAgICAgICAgLnAtNC5tYi0wCiAgICAgICAgICAucm93LmFsaWduLWl0ZW1zLWNlbnRlcgogICAgICAgICAgICAuY29sLWxnLWF1dG8uZC1ub25lLmQtbGctYmxvY2sKICAgICAgICAgICAgICBpbWcoc3JjPSdAL2Fzc2V0cy9jdXJzby90Mi8yLnN2ZycsIHN0eWxlPSdtYXgtd2lkdGg6IDkwcHgnKS5teC1hdXRvCiAgICAgICAgICAgIC5jb2wtbGcKICAgICAgICAgICAgICBwLm1iLTAgTGEgb3JnYW5pemFjacOzbiBlcyBlbCBwcm9jZXNvIHF1ZSBlc3RhYmxlY2UgbGEgZXN0cnVjdHVyYSBuZWNlc2FyaWEgcGFyYSBsYSBnZXN0acOzbiBlZmljaWVudGUgeSBsYSByYWNpb25hbGl6YWNpw7NuIGRlIGxvcyByZWN1cnNvcywgZGVudHJvIGRlIHVuYSBlbXByZXNhLiBFc3RlIHByb2Nlc28gc2UgbGxldmEgYSBjYWJvIG1lZGlhbnRlIGxhIGFzaWduYWNpw7NuIGRlIGplcmFycXXDrWFzIHkgbGEgZGlzcG9zaWNpw7NuLCBjb3JyZWxhY2nDs24geSBhZ3J1cGFjacOzbiBkZSBhY3RpdmlkYWRlcywgY29uIGVsIG9iamV0aXZvIGRlIHNpbXBsaWZpY2FyIHkgb3B0aW1pemFyIGxhcyBmdW5jaW9uZXMgZGVsIGdydXBvIHNvY2lhbCBxdWUgY29uZm9ybWEgbGEgZW1wcmVzYS4KICAgICAgLmNvbC1zbS0xMi5jb2wtbGctNC5kLW5vbmUuZC1sZy1ibG9jawogICAgICAgIGltZyhzcmM9J0AvYXNzZXRzL2N1cnNvL3QyLzMucG5nJywgYWx0PScnKQoKICAgICN0XzJfMi50aXR1bG8tc2VndW5kbyhkYXRhLWFvcz0iZmFkZS11cCIpCiAgICAgIGgyICNbc3BhbiAyLjJdIEVsZW1lbnRvcyBmdW5kYW1lbnRhbGVzIGEgY29uc2lkZXJhciBlbiBsYSBvcmdhbml6YWNpw7NuCiAgICBwLm1iLTQuZnctYm9sZChkYXRhLWFvcz0iZmFkZS11cCIpIFBhcmEgcXVlIGxhIG9yZ2FuaXphY2nDs24gc2VhIGVmZWN0aXZhLCBzZSBoYWNlIG5lY2VzYXJpbyB0ZW5lciBlbiBjdWVudGEgY2llcnRvcyBlbGVtZW50b3MgZXNlbmNpYWxlczoKICAgIC5iZy1mdWxsLXdpZHRoLmJnLWZvbmRvLTQubWItMChkYXRhLWFvcz0iZmFkZS11cCIpCiAgICAgIC5wLTQucC1tZC01CiAgICAgICAgU2x5ZGVyQSh0aXBvPSdiJykuYmctd2hpdGUKICAgICAgICAgIC8vIEVzdHJ1Y3R1cmEKICAgICAgICAgIC5yb3cuYWxpZ24taXRlbXMtY2VudGVyLnAtNC5wLW1kLTUKICAgICAgICAgICAgLmNvbC1sZy01LmQtbm9uZS5kLWxnLWJsb2NrCiAgICAgICAgICAgICAgICBpbWcoc3JjPSdAL2Fzc2V0cy9jdXJzby90Mi80LnBuZycsIGFsdD0nUGVyc29uYXMgdHJhYmFqYW5kbyBlbiB1bmEgb2ZpY2luYSBjb24gbm90YXMgYWRoZXNpdmFzJykKICAgICAgICAgICAgLmNvbC1zbS0xMi5jb2wtbGctNwogICAgICAgICAgICAgIGg1IEVzdHJ1Y3R1cmEKICAgICAgICAgICAgICBwIExhIG9yZ2FuaXphY2nDs24gaW1wbGljYSBlbCBkaXNlw7FvIGRlIHVuIG1hcmNvIGRlIHRyYWJham8gcGFyYSB1biBncnVwbyBzb2NpYWwgZXNwZWPDrWZpY28uIEVzdGUgbWFyY28gZXN0YWJsZWNlIGxhcyBmdW5jaW9uZXMsIGplcmFycXXDrWFzIHkgYWN0aXZpZGFkZXMgbmVjZXNhcmlhcyBwYXJhIGVsIGxvZ3JvIGRlIGxvcyBvYmpldGl2b3MuIEVzIGVsIGNpbWllbnRvIHNvYnJlIGVsIHF1ZSBzZSBjb25zdHJ1eWVuIGxhcyByZWxhY2lvbmVzIGRlbnRybyBkZSBsYSBlbXByZXNhIHkgc2UgZGVmaW5lbiBsb3Mgcm9sZXMgeSByZXNwb25zYWJpbGlkYWRlcyBkZSBjYWRhIG1pZW1icm8uCgogICAgICAgICAgLy8gU2lzdGVtYXRpemFjacOzbgogICAgICAgICAgLnJvdy5hbGlnbi1pdGVtcy1jZW50ZXIucC00LnAtbWQtNQogICAgICAgICAgICAuY29sLWxnLTUuZC1ub25lLmQtbGctYmxvY2sKICAgICAgICAgICAgICAgIGltZyhzcmM9J0AvYXNzZXRzL2N1cnNvL3QyLzUucG5nJywgYWx0PSdFbmdyYW5hamVzIGRlIGNvbG9yZXMgaW50ZXJjb25lY3RhZG9zJykKICAgICAgICAgICAgLmNvbC1zbS0xMi5jb2wtbGctNwogICAgICAgICAgICAgIGg1IFNpc3RlbWF0aXphY2nDs24KICAgICAgICAgICAgICBwIExhIHNpc3RlbWF0aXphY2nDs24gc2UgcmVmaWVyZSBhIGxhIGNvb3JkaW5hY2nDs24gcmFjaW9uYWwgZGUgbGFzIGFjdGl2aWRhZGVzIHkgbG9zIHJlY3Vyc29zIGRlIGxhIGVtcHJlc2EuIEFsIG9yZ2FuaXphciBsb3MgcmVjdXJzb3MsIGRlIG1hbmVyYSBlZmljaWVudGUsIHNlIGZhY2lsaXRhIGxhIGVqZWN1Y2nDs24gZGUgbG9zIHRyYWJham9zIGRlIGZvcm1hIG9yZ2FuaXphZGEgeSBwcm9kdWN0aXZhLiBFc3RvIGltcGxpY2EgcmVhbGl6YXIgdW4gZGlzZcOxbyBlc3RydWN0dXJhbCB5IHRlbmVyIHVuIGVuZm9xdWUgcXVlIG9wdGltaWNlIGxvcyBwcm9jZXNvcyB5IHJlZHV6Y2EgZWwgZGVzcGVyZGljaW8uCgogICAgICAgICAgLy8gQWdydXBhY2nDs24geSBhc2lnbmFjacOzbgogICAgICAgICAgLnJvdy5hbGlnbi1pdGVtcy1jZW50ZXIucC00LnAtbWQtNQogICAgICAgICAgICAuY29sLWxnLTUuZC1ub25lLmQtbGctYmxvY2sKICAgICAgICAgICAgICAgIGltZyhzcmM9J0AvYXNzZXRzL2N1cnNvL3QyLzYucG5nJywgYWx0PSdQZXJzb25hIHRyYWJhamFuZG8gY29uIHVuIHRhYmxlcm8gZGUgcGxhbmlmaWNhY2nDs24nKQogICAgICAgICAgICAuY29sLXNtLTEyLmNvbC1sZy03CiAgICAgICAgICAgICAgaDUgQWdydXBhY2nDs24geSBhc2lnbmFjacOzbiBkZSBhY3RpdmlkYWRlcyB5IHJlc3BvbnNhYmlsaWRhZGVzCiAgICAgICAgICAgICAgcCBMYSBvcmdhbml6YWNpw7NuIGRlYmUgZm9tZW50YXIgbGEgZGl2aXNpw7NuIGRlbCB0cmFiYWpvIHkgbGEgYXNpZ25hY2nDs24gY2xhcmEgZGUgdGFyZWFzLiBBbCBhZ3J1cGFyIGxhcyBhY3RpdmlkYWRlcyB5IGFzaWduYXIgcmVzcG9uc2FiaWxpZGFkZXMgZGUgZm9ybWEgYWRlY3VhZGEsIHNlIHByb211ZXZlIGxhIGVzcGVjaWFsaXphY2nDs24sIGxvIHF1ZSBtZWpvcmEgbGEgZWZpY2llbmNpYSB5IHBlcm1pdGUgcXVlIGxvcyBlbXBsZWFkb3Mgc2UgZW5mb3F1ZW4gZW4gw6FyZWFzIGVzcGVjw61maWNhcywgbG8gcXVlIHB1ZWRlIGdlbmVyYXIgbWF5b3IgdmFsb3IuCgogICAgICAgICAgLy8gSmVyYXJxdcOtYQogICAgICAgICAgLnJvdy5hbGlnbi1pdGVtcy1jZW50ZXIucC00LnAtbWQtNQogICAgICAgICAgICAuY29sLWxnLTUuZC1ub25lLmQtbGctYmxvY2sKICAgICAgICAgICAgICAgIGltZyhzcmM9J0AvYXNzZXRzL2N1cnNvL3QyLzcucG5nJywgYWx0PSdEaWFncmFtYSBvcmdhbml6YWNpb25hbCBlbiBwYXBlbCcpCiAgICAgICAgICAgIC5jb2wtc20tMTIuY29sLWxnLTcKICAgICAgICAgICAgICBoNSBKZXJhcnF1w61hCiAgICAgICAgICAgICAgcC5tYi0wIERlbnRybyBkZSB1bmEgZXN0cnVjdHVyYSBvcmdhbml6YWNpb25hbCwgbGEgamVyYXJxdcOtYSBlc3RhYmxlY2UgbG9zIG5pdmVsZXMgZGUgYXV0b3JpZGFkIHkgcmVzcG9uc2FiaWxpZGFkLiBFc3RvIGFzZWd1cmEgcXVlIGhheWEgdW5hIGNhZGVuYSBkZSBtYW5kbyBkacOhZmFuYSwgbG8gcXVlIGZhY2lsaXRhIGxhIHRvbWEgZGUgZGVjaXNpb25lcyB5IGxhIGRlbGVnYWNpw7NuIGRlIHRhcmVhcy4gTGEgamVyYXJxdcOtYSBwZXJtaXRlIHF1ZSBsb3MgZW1wbGVhZG9zIGNvbXByZW5kYW4gc3UgcG9zaWNpw7NuIGRlbnRybyBkZSBsYSBvcmdhbml6YWNpw7NuIHkgc3VzIHJlc3BvbnNhYmlsaWRhZGVzIGVuIHJlbGFjacOzbiBjb24gb3Ryb3MgbWllbWJyb3MgZGVsIGVxdWlwby4KCiAgICAgICAgICAvLyBTaW1wbGlmaWNhY2nDs24gZGUgZnVuY2lvbmVzCiAgICAgICAgICAucm93LmFsaWduLWl0ZW1zLWNlbnRlci5wLTQucC1tZC01CiAgICAgICAgICAgIC5jb2wtbGctNS5kLW5vbmUuZC1sZy1ibG9jawogICAgICAgICAgICAgICAgaW1nKHNyYz0nQC9hc3NldHMvY3Vyc28vdDIvOC5wbmcnLCBhbHQ9J1BlcnNvbmFzIGFuYWxpemFuZG8gZ3LDoWZpY29zIGRlIGJhcnJhcycpCiAgICAgICAgICAgIC5jb2wtc20tMTIuY29sLWxnLTcKICAgICAgICAgICAgICBoNSBTaW1wbGlmaWNhY2nDs24gZGUgZnVuY2lvbmVzCiAgICAgICAgICAgICAgcCBVbm8gZGUgbG9zIG9iamV0aXZvcyBmdW5kYW1lbnRhbGVzIGRlIGxhIG9yZ2FuaXphY2nDs24gZXMgbGEgc2ltcGxpZmljYWNpw7NuIGRlIGxhcyBmdW5jaW9uZXMgZGVudHJvIGRlIGxhIGVtcHJlc2EuIEVzdG8gaW1wbGljYSBlc3RhYmxlY2VyIGxvcyBtw6l0b2RvcyBtw6FzIGVmaWNhY2VzIHkgc2VuY2lsbG9zIHBhcmEgcmVhbGl6YXIgZWwgdHJhYmFqbywgZWxpbWluYW5kbyBwcm9jZXNvcyBpbm5lY2VzYXJpb3MgeSByZWR1Y2llbmRvIGxhIGNvbXBsZWppZGFkLiBMYSBzaW1wbGlmaWNhY2nDs24gZmFjaWxpdGEgbGEgb3BlcmF0aXZpZGFkIHkgY29udHJpYnV5ZSBhIHVuIGVudG9ybm8gZGUgdHJhYmFqbyBtw6FzIGVmaWNpZW50ZSB5IG1lbm9zIHByb3BlbnNvIGEgZXJyb3Jlcy4KCiAgICAuYmctZnVsbC13aWR0aC5iZy1jb2xvci0xMS5tYi01KGRhdGEtYW9zPSJmYWRlLXVwIikKICAgICAgLnB4LTUucHktNAogICAgICAgIHAubWItMC5mdy1ib2xkIExhcyBldGFwYXMgZGUgbGEgb3JnYW5pemFjacOzbiBzb246CgogICAgLnRpdHVsby1maWd1cmEubWItMihkYXRhLWFvcz0iZmFkZS11cCIpCiAgICAgIGg1IEZpZ3VyYSAzLiAKICAgICAgc3BhbiBFdGFwYXMgZGUgbGEgb3JnYW5pemFjacOzbgogICAgLnJvdy5qdXN0aWZ5LWNvbnRlbnQtY2VudGVyLm1iLTUoZGF0YS1hb3M9ImZhZGUtdXAiKQogICAgICAuY29sLXNtLTEyLmNvbC1sZy04LmJnLWNvbG9yLTYucC00Lm1iLTAKICAgICAgICAgIGltZyhzcmM9J0AvYXNzZXRzL2N1cnNvL3QyLzkuc3ZnJywgYWx0PScnKS5tYi0wCgoKICAgICN0XzJfMy50aXR1bG8tc2VndW5kbyhkYXRhLWFvcz0iZmFkZS11cCIpCiAgICAgIGgyICNbc3BhbiAyLjNdIEVsZW1lbnRvcyBmdW5kYW1lbnRhbGVzIGEgY29uc2lkZXJhciBlbiBsYSBvcmdhbml6YWNpw7NuCgogICAgLmJnLWZ1bGwtd2lkdGguYmctY29sb3ItNC5tYi01KGRhdGEtYW9zPSJmYWRlLXVwIikKICAgICAgLnB4LTUucHktMwogICAgICAgIC5yb3cuYWxpZ24taXRlbXMtY2VudGVyCiAgICAgICAgICAuY29sLWxnLWF1dG8uZC1ub25lLmQtbGctYmxvY2sKICAgICAgICAgICAgaW1nKHNyYz0nQC9hc3NldHMvY3Vyc28vdDIvMTAuc3ZnJywgc3R5bGU9J21heC13aWR0aDogOTBweCcpLm14LWF1dG8KICAgICAgICAgIC5jb2wtbGcKICAgICAgICAgICAgcC5tYi0wIEVsIGFuw6FsaXNpcyBkZSBsYSBlc3RydWN0dXJhIHkgZGlzZcOxbyBvcmdhbml6YWNpb25hbCBlcyBmdW5kYW1lbnRhbCBwYXJhIGNvbXByZW5kZXIgY8OzbW8gc2UgYWdydXBhbiB5IGNvb3JkaW5hbiBsYXMgYWN0aXZpZGFkZXMgZW4gdW5hIGVtcHJlc2EsIHBlcm1pdGllbmRvIHVuYSBnZXN0acOzbiBtw6FzIGVmaWNpZW50ZSB5IGVzdHJ1Y3R1cmFkYS4KICAgIC5iZy1mdWxsLXdpZHRoLmJnLWNvbG9yLTMubWItNShkYXRhLWFvcz0iZmFkZS11cCIpCiAgICAgIC5wLTUKICAgICAgICAucm93Lmp1c3RpZnktY29udGVudC1jZW50ZXIuYWxpZ24taXRlbXMtY2VudGVyCiAgICAgICAgICAuY29sLXNtLTEyLmNvbC1sZy04CiAgICAgICAgICAgICBoMi5tYi00IEVzdHJ1Y3R1cmEgeSBkaXNlw7FvIG9yZ2FuaXphY2lvbmFsIAogICAgICAgICAgICAgcC5tYi00IEVuIGVsIFBERiAjW2IgRXN0cnVjdHVyYSB5IGRpc2XDsW8gb3JnYW5pemFjaW9uYWxdLCBzZSBleHBsb3JhbiBjb25jZXB0b3MgY2xhdmUgY29tbyBsYSBkZXBhcnRhbWVudGFsaXphY2nDs24gZnVuY2lvbmFsLCBwb3IgcHJvZHVjdG9zIHkgcG9yIGNsaWVudGVzLCBkZXN0YWNhbmRvIHN1cyB2ZW50YWphcyB5IGRlc3ZlbnRhamFzLCBhc8OtIGNvbW8gZGlmZXJlbnRlcyB0aXBvcyBkZSBvcmdhbmlncmFtYXMgcXVlIGlsdXN0cmFuIGxhcyByZWxhY2lvbmVzIGplcsOhcnF1aWNhcyB5IG9wZXJhdGl2YXMgZGVudHJvIGRlIHVuYSBvcmdhbml6YWNpw7NuLiBFc3RlIGNvbnRlbmlkbyBwZXJtaXRpcsOhIHZpc3VhbGl6YXIgY8OzbW8gZXN0b3MgZWxlbWVudG9zIGNvbnRyaWJ1eWVuIGFsIGN1bXBsaW1pZW50byBkZSBsb3Mgb2JqZXRpdm9zIGVzdHJhdMOpZ2ljb3MgZW4gZGl2ZXJzb3MgY29udGV4dG9zIGVtcHJlc2FyaWFsZXMuCiAgICAgICAgICAgICBhLmFuZXhvLm1iLTQuYmctd2hpdGUudy1maXQoOmhyZWY9J29idGVuZXJMaW5rKCIvZG93bmxvYWRzL2VzdHJ1Y3R1cmFfZGlzZW5vX29yZ2FuaXphY2lvbmFsLnBkZiIpJyB0YXJnZXQ9J19ibGFuaycpCiAgICAgICAgICAgICAgIC5hbmV4b19faWNvbm8oOnN0eWxlPSd7ImJhY2tncm91bmQtY29sb3IiOiAiI0ZDREZEQiJ9JykKICAgICAgICAgICAgICAgICAgaW1nKHNyYz0nQC9hc3NldHMvdGVtcGxhdGUvaWNvbm8tcGRmLnN2ZycpCiAgICAgICAgICAgICAgIC5hbmV4b19fdGV4dG8KICAgICAgICAgICAgICAgICAgcCA8c3Ryb25nPkFuZXhvLiA8L3N0cm9uZz4gRXN0cnVjdHVyYSB5IGRpc2XDsW8gb3JnYW5pemFjaW9uYWwgCiAgICAgICAgICAuY29sLWxnLTQuZC1ub25lLmQtbGctYmxvY2sKICAgICAgICAgICAgIGltZyhzcmM9J0AvYXNzZXRzL2N1cnNvL3QyLzExLnBuZycsIGFsdD0nJykKCgogICAgLmJnLWZ1bGwtd2lkdGguYm9yZGVyLXRvcC5jb2xvci1wcmltYXJpbwogICAgICAucC00LnAtbWQtNQogICAgICAgIGgyIE1BVEVSSUFMIENPTVBMRU1FTlRBUklPCiAgICAgICAgLnJvdy5tYXRlcmlhbC1jb21wbGVtCiAgICAgICAgICAuY29sLTEyLmNvbC1tZC02LmNvbC1sZy03CiAgICAgICAgICAgIHAgTG9zIGludml0YW1vcyBhIGV4cGxvcmFyIGVsIG1hdGVyaWFsIGNvbXBsZW1lbnRhcmlvIGRlIGVzdGUgY3Vyc28sIGVuIGVzdGEgc2VjY2nDs24gZW5jb250cmFyw6EgcmVjdXJzb3MgcXVlIGxlIHBlcm1pdGlyw6FuIHByb2Z1bmRpemFyICB5IGVucmlxdWVjZXIgc3UgYXByZW5kaXphamUgZW4gbG9zIHRlbWFzIHRyYXRhZG9zIGVuIGVzdGEgdW5pZGFkLgogICAgICAgICAgICAvLy0gUmVmZXJlbmNpYSBjb24gZW5sYWNlIAogICAgICAgICAgICBwLmQtZmxleC5teS00CiAgICAgICAgICAgICAgaW1nLm1lLTMoc3JjPSdAL2Fzc2V0cy9jb21wb25lbnRlcy9ib29rLnN2ZycgOnN0eWxlPSd7Im1heC13aWR0aCI6IjE2cHgifScpCiAgICAgICAgICAgICAgYShocmVmPSdodHRwczovL3JldW5pci51bmlyLm5ldC9iaXRzdHJlYW0vaGFuZGxlLzEyMzQ1Njc4OS8yMzM2L0dlbW1hX01vcm9uX01vbGluYV9CLnBkZicgdGFyZ2V0PSdfYmxhbmsnIHJlbD0nbm9vcGVuZXIgbm9yZWZlcnJlcicpIE1vcsOzbi1Nb2xpbmEsIEcuICgyMDE0KS4gTGEgT3JnYW5pemFjacOzbiBjb21vIGNsYXZlIGRlbCDDqXhpdG8gZW1wcmVzYXJpYWwuCgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICBwLmQtZmxleC5teS00CiAgICAgICAgICAgICAgaW1nLm1lLTMoc3JjPSdAL2Fzc2V0cy9jb21wb25lbnRlcy9saW5rLnN2ZycgOnN0eWxlPSd7Im1heC13aWR0aCI6IjE2cHgifScpCiAgICAgICAgICAgICAgYShocmVmPSdodHRwczovL3NjaG9sYXIuZ29vZ2xlLmVzL3NjaGhwP2hsPWVzJyB0YXJnZXQ9J19ibGFuaycgcmVsPSdub29wZW5lciBub3JlZmVycmVyJykgR29vZ2xlIGFjYWTDqW1pY28uCiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgLy8tIFJlZmVyZW5jaWEgZGUgeW91dHViZSAKICAgICAgICAgICAgcC5kLWZsZXgubXktNAogICAgICAgICAgICAgIGltZy5tZS0zKHNyYz0nQC9hc3NldHMvdGVtcGxhdGUvaWNvbm8teXQuc3ZnJyA6c3R5bGU9J3sibWF4LXdpZHRoIjoiMTZweCJ9JykKICAgICAgICAgICAgICBhKGhyZWY9J2h0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9UXFjakktelp5YjgnIHRhcmdldD0nX2JsYW5rJyByZWw9J25vb3BlbmVyIG5vcmVmZXJyZXInKSBMaWZlZGVyIEVkdS4gKDIwMjIpLiDCv1F1w6kgZXMgZWwgUFJPQ0VTTyBBRE1JTklTVFJBVElWTyB5IGN1w6FsZXMgc29uIHN1cyBldGFwYXM/CgogICAgICAgICAgICBwLmQtZmxleC5teS00CiAgICAgICAgICAgICAgaW1nLm1lLTMoc3JjPSdAL2Fzc2V0cy90ZW1wbGF0ZS9pY29uby15dC5zdmcnIDpzdHlsZT0neyJtYXgtd2lkdGgiOiIxNnB4In0nKQogICAgICAgICAgICAgIGEoaHJlZj0naHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1CaThQeW9KLThwUScgdGFyZ2V0PSdfYmxhbmsnIHJlbD0nbm9vcGVuZXIgbm9yZWZlcnJlcicpIEF1dGllc3R1ZGlvMTAuICgyMDIxKS4gUHJvY2VzbyBBZG1pbmlzdHJhdGl2byBwYXJ0ZSAxOiBQbGFuZWFjacOzbiB5IG9yZ2FuaXphY2nDs24uCiAKICAgICAgICAgICAgCiAgICAgICAgICAuY29sLTEyLmNvbC1tZC02LmNvbC1sZy0zLm9mZnNldC1sZy0xLmQtbm9uZS5kLWxnLWJsb2NrCiAgICAgICAgICAgIGZpZ3VyZQogICAgICAgICAgICAgIGltZyhzcmM9J0AvYXNzZXRzL2NvbXBvbmVudGVzL21hdGVyaWFsLWNvbXBsZW1lbnRhcmlvLnN2ZycsIGFsdD0nJykKCgo="},null]}